library verilog;
use verilog.vl_types.all;
entity gtwizard_ultrascale_0_gtwizard_gtye4 is
    generic(
        C_CHANNEL_ENABLE: vl_logic_vector(191 downto 0) := (Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi0, Hi1);
        C_PCIE_ENABLE   : integer := 0;
        C_PCIE_CORECLK_FREQ: integer := 250;
        C_COMMON_SCALING_FACTOR: integer := 1;
        C_CPLL_VCO_FREQUENCY: real    := 5.156250e+03;
        C_FREERUN_FREQUENCY: real    := 2.000000e+02;
        C_INCLUDE_CPLL_CAL: integer := 2;
        C_SIM_CPLL_CAL_BYPASS: vl_logic := Hi0;
        C_LOCATE_RESET_CONTROLLER: integer := 0;
        C_LOCATE_USER_DATA_WIDTH_SIZING: integer := 0;
        C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER: integer := 0;
        C_LOCATE_RX_USER_CLOCKING: integer := 1;
        C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER: integer := 0;
        C_LOCATE_TX_USER_CLOCKING: integer := 1;
        C_RESET_CONTROLLER_INSTANCE_CTRL: integer := 0;
        C_RX_BUFFBYPASS_MODE: integer := 0;
        C_RX_BUFFER_BYPASS_INSTANCE_CTRL: integer := 0;
        C_RX_BUFFER_MODE: integer := 1;
        C_RX_DATA_DECODING: integer := 0;
        C_RX_ENABLE     : integer := 1;
        C_RX_INT_DATA_WIDTH: integer := 32;
        C_RX_LINE_RATE  : real    := 1.031250e+01;
        C_RX_MASTER_CHANNEL_IDX: integer := 0;
        C_RX_OUTCLK_BUFG_GT_DIV: integer := 1;
        C_RX_PLL_TYPE   : integer := 0;
        C_RX_USER_CLOCKING_CONTENTS: integer := 0;
        C_RX_USER_CLOCKING_INSTANCE_CTRL: integer := 0;
        C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2: integer := 1;
        C_RX_USER_CLOCKING_SOURCE: integer := 0;
        C_RX_USER_DATA_WIDTH: integer := 32;
        C_TOTAL_NUM_CHANNELS: integer := 1;
        C_TOTAL_NUM_COMMONS: integer := 1;
        C_TX_BUFFBYPASS_MODE: integer := 0;
        C_TX_BUFFER_BYPASS_INSTANCE_CTRL: integer := 0;
        C_TX_BUFFER_MODE: integer := 1;
        C_TX_DATA_ENCODING: integer := 0;
        C_TX_ENABLE     : integer := 1;
        C_TX_INT_DATA_WIDTH: integer := 32;
        C_TX_MASTER_CHANNEL_IDX: integer := 0;
        C_TX_OUTCLK_BUFG_GT_DIV: integer := 1;
        C_TX_PLL_TYPE   : integer := 0;
        C_TX_USER_CLOCKING_CONTENTS: integer := 0;
        C_TX_USER_CLOCKING_INSTANCE_CTRL: integer := 0;
        C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2: integer := 1;
        C_TX_USER_CLOCKING_SOURCE: integer := 0;
        C_TX_USER_DATA_WIDTH: integer := 32
    );
    port(
        gtwiz_userclk_tx_reset_in: in     vl_logic_vector;
        gtwiz_userclk_tx_active_in: in     vl_logic_vector;
        gtwiz_userclk_tx_srcclk_out: out    vl_logic_vector;
        gtwiz_userclk_tx_usrclk_out: out    vl_logic_vector;
        gtwiz_userclk_tx_usrclk2_out: out    vl_logic_vector;
        gtwiz_userclk_tx_active_out: out    vl_logic_vector;
        gtwiz_userclk_rx_reset_in: in     vl_logic_vector;
        gtwiz_userclk_rx_active_in: in     vl_logic_vector;
        gtwiz_userclk_rx_srcclk_out: out    vl_logic_vector;
        gtwiz_userclk_rx_usrclk_out: out    vl_logic_vector;
        gtwiz_userclk_rx_usrclk2_out: out    vl_logic_vector;
        gtwiz_userclk_rx_active_out: out    vl_logic_vector;
        gtwiz_buffbypass_tx_reset_in: in     vl_logic_vector;
        gtwiz_buffbypass_tx_start_user_in: in     vl_logic_vector;
        gtwiz_buffbypass_tx_done_out: out    vl_logic_vector;
        gtwiz_buffbypass_tx_error_out: out    vl_logic_vector;
        gtwiz_buffbypass_rx_reset_in: in     vl_logic_vector;
        gtwiz_buffbypass_rx_start_user_in: in     vl_logic_vector;
        gtwiz_buffbypass_rx_done_out: out    vl_logic_vector;
        gtwiz_buffbypass_rx_error_out: out    vl_logic_vector;
        gtwiz_reset_clk_freerun_in: in     vl_logic_vector;
        gtwiz_reset_all_in: in     vl_logic_vector;
        gtwiz_reset_tx_pll_and_datapath_in: in     vl_logic_vector;
        gtwiz_reset_tx_datapath_in: in     vl_logic_vector;
        gtwiz_reset_rx_pll_and_datapath_in: in     vl_logic_vector;
        gtwiz_reset_rx_datapath_in: in     vl_logic_vector;
        gtwiz_reset_tx_done_in: in     vl_logic_vector;
        gtwiz_reset_rx_done_in: in     vl_logic_vector;
        gtwiz_reset_qpll0lock_in: in     vl_logic_vector;
        gtwiz_reset_qpll1lock_in: in     vl_logic_vector;
        gtwiz_reset_rx_cdr_stable_out: out    vl_logic_vector;
        gtwiz_reset_tx_done_out: out    vl_logic_vector;
        gtwiz_reset_rx_done_out: out    vl_logic_vector;
        gtwiz_reset_qpll0reset_out: out    vl_logic_vector;
        gtwiz_reset_qpll1reset_out: out    vl_logic_vector;
        gtwiz_gtye4_cpll_cal_txoutclk_period_in: in     vl_logic_vector;
        gtwiz_gtye4_cpll_cal_cnt_tol_in: in     vl_logic_vector;
        gtwiz_gtye4_cpll_cal_bufg_ce_in: in     vl_logic_vector;
        gtwiz_userdata_tx_in: in     vl_logic_vector;
        gtwiz_userdata_rx_out: out    vl_logic_vector;
        bgbypassb_in    : in     vl_logic_vector;
        bgmonitorenb_in : in     vl_logic_vector;
        bgpdb_in        : in     vl_logic_vector;
        bgrcalovrd_in   : in     vl_logic_vector;
        bgrcalovrdenb_in: in     vl_logic_vector;
        drpaddr_common_in: in     vl_logic_vector;
        drpclk_common_in: in     vl_logic_vector;
        drpdi_common_in : in     vl_logic_vector;
        drpen_common_in : in     vl_logic_vector;
        drpwe_common_in : in     vl_logic_vector;
        gtgrefclk0_in   : in     vl_logic_vector;
        gtgrefclk1_in   : in     vl_logic_vector;
        gtnorthrefclk00_in: in     vl_logic_vector;
        gtnorthrefclk01_in: in     vl_logic_vector;
        gtnorthrefclk10_in: in     vl_logic_vector;
        gtnorthrefclk11_in: in     vl_logic_vector;
        gtrefclk00_in   : in     vl_logic_vector;
        gtrefclk01_in   : in     vl_logic_vector;
        gtrefclk10_in   : in     vl_logic_vector;
        gtrefclk11_in   : in     vl_logic_vector;
        gtsouthrefclk00_in: in     vl_logic_vector;
        gtsouthrefclk01_in: in     vl_logic_vector;
        gtsouthrefclk10_in: in     vl_logic_vector;
        gtsouthrefclk11_in: in     vl_logic_vector;
        pcierateqpll0_in: in     vl_logic_vector;
        pcierateqpll1_in: in     vl_logic_vector;
        pmarsvd0_in     : in     vl_logic_vector;
        pmarsvd1_in     : in     vl_logic_vector;
        qpll0clkrsvd0_in: in     vl_logic_vector;
        qpll0clkrsvd1_in: in     vl_logic_vector;
        qpll0fbdiv_in   : in     vl_logic_vector;
        qpll0lockdetclk_in: in     vl_logic_vector;
        qpll0locken_in  : in     vl_logic_vector;
        qpll0pd_in      : in     vl_logic_vector;
        qpll0refclksel_in: in     vl_logic_vector;
        qpll0reset_in   : in     vl_logic_vector;
        qpll1clkrsvd0_in: in     vl_logic_vector;
        qpll1clkrsvd1_in: in     vl_logic_vector;
        qpll1fbdiv_in   : in     vl_logic_vector;
        qpll1lockdetclk_in: in     vl_logic_vector;
        qpll1locken_in  : in     vl_logic_vector;
        qpll1pd_in      : in     vl_logic_vector;
        qpll1refclksel_in: in     vl_logic_vector;
        qpll1reset_in   : in     vl_logic_vector;
        qpllrsvd1_in    : in     vl_logic_vector;
        qpllrsvd2_in    : in     vl_logic_vector;
        qpllrsvd3_in    : in     vl_logic_vector;
        qpllrsvd4_in    : in     vl_logic_vector;
        rcalenb_in      : in     vl_logic_vector;
        sdm0data_in     : in     vl_logic_vector;
        sdm0reset_in    : in     vl_logic_vector;
        sdm0toggle_in   : in     vl_logic_vector;
        sdm0width_in    : in     vl_logic_vector;
        sdm1data_in     : in     vl_logic_vector;
        sdm1reset_in    : in     vl_logic_vector;
        sdm1toggle_in   : in     vl_logic_vector;
        sdm1width_in    : in     vl_logic_vector;
        ubcfgstreamen_in: in     vl_logic_vector;
        ubdo_in         : in     vl_logic_vector;
        ubdrdy_in       : in     vl_logic_vector;
        ubenable_in     : in     vl_logic_vector;
        ubgpi_in        : in     vl_logic_vector;
        ubintr_in       : in     vl_logic_vector;
        ubiolmbrst_in   : in     vl_logic_vector;
        ubmbrst_in      : in     vl_logic_vector;
        ubmdmcapture_in : in     vl_logic_vector;
        ubmdmdbgrst_in  : in     vl_logic_vector;
        ubmdmdbgupdate_in: in     vl_logic_vector;
        ubmdmregen_in   : in     vl_logic_vector;
        ubmdmshift_in   : in     vl_logic_vector;
        ubmdmsysrst_in  : in     vl_logic_vector;
        ubmdmtck_in     : in     vl_logic_vector;
        ubmdmtdi_in     : in     vl_logic_vector;
        drpdo_common_out: out    vl_logic_vector;
        drprdy_common_out: out    vl_logic_vector;
        pmarsvdout0_out : out    vl_logic_vector;
        pmarsvdout1_out : out    vl_logic_vector;
        qpll0fbclklost_out: out    vl_logic_vector;
        qpll0lock_out   : out    vl_logic_vector;
        qpll0outclk_out : out    vl_logic_vector;
        qpll0outrefclk_out: out    vl_logic_vector;
        qpll0refclklost_out: out    vl_logic_vector;
        qpll1fbclklost_out: out    vl_logic_vector;
        qpll1lock_out   : out    vl_logic_vector;
        qpll1outclk_out : out    vl_logic_vector;
        qpll1outrefclk_out: out    vl_logic_vector;
        qpll1refclklost_out: out    vl_logic_vector;
        qplldmonitor0_out: out    vl_logic_vector;
        qplldmonitor1_out: out    vl_logic_vector;
        refclkoutmonitor0_out: out    vl_logic_vector;
        refclkoutmonitor1_out: out    vl_logic_vector;
        rxrecclk0sel_out: out    vl_logic_vector;
        rxrecclk1sel_out: out    vl_logic_vector;
        sdm0finalout_out: out    vl_logic_vector;
        sdm0testdata_out: out    vl_logic_vector;
        sdm1finalout_out: out    vl_logic_vector;
        sdm1testdata_out: out    vl_logic_vector;
        ubdaddr_out     : out    vl_logic_vector;
        ubden_out       : out    vl_logic_vector;
        ubdi_out        : out    vl_logic_vector;
        ubdwe_out       : out    vl_logic_vector;
        ubmdmtdo_out    : out    vl_logic_vector;
        ubrsvdout_out   : out    vl_logic_vector;
        ubtxuart_out    : out    vl_logic_vector;
        cdrstepdir_in   : in     vl_logic_vector;
        cdrstepsq_in    : in     vl_logic_vector;
        cdrstepsx_in    : in     vl_logic_vector;
        cfgreset_in     : in     vl_logic_vector;
        clkrsvd0_in     : in     vl_logic_vector;
        clkrsvd1_in     : in     vl_logic_vector;
        cpllfreqlock_in : in     vl_logic_vector;
        cplllockdetclk_in: in     vl_logic_vector;
        cplllocken_in   : in     vl_logic_vector;
        cpllpd_in       : in     vl_logic_vector;
        cpllrefclksel_in: in     vl_logic_vector;
        cpllreset_in    : in     vl_logic_vector;
        dmonfiforeset_in: in     vl_logic_vector;
        dmonitorclk_in  : in     vl_logic_vector;
        drpaddr_in      : in     vl_logic_vector;
        drpclk_in       : in     vl_logic_vector;
        drpdi_in        : in     vl_logic_vector;
        drpen_in        : in     vl_logic_vector;
        drprst_in       : in     vl_logic_vector;
        drpwe_in        : in     vl_logic_vector;
        eyescanreset_in : in     vl_logic_vector;
        eyescantrigger_in: in     vl_logic_vector;
        freqos_in       : in     vl_logic_vector;
        gtgrefclk_in    : in     vl_logic_vector;
        gtnorthrefclk0_in: in     vl_logic_vector;
        gtnorthrefclk1_in: in     vl_logic_vector;
        gtrefclk0_in    : in     vl_logic_vector;
        gtrefclk1_in    : in     vl_logic_vector;
        gtrsvd_in       : in     vl_logic_vector;
        gtrxreset_in    : in     vl_logic_vector;
        gtrxresetsel_in : in     vl_logic_vector;
        gtsouthrefclk0_in: in     vl_logic_vector;
        gtsouthrefclk1_in: in     vl_logic_vector;
        gttxreset_in    : in     vl_logic_vector;
        gttxresetsel_in : in     vl_logic_vector;
        gtyrxn_in       : in     vl_logic_vector;
        gtyrxp_in       : in     vl_logic_vector;
        incpctrl_in     : in     vl_logic_vector;
        loopback_in     : in     vl_logic_vector;
        pcieeqrxeqadaptdone_in: in     vl_logic_vector;
        pcierstidle_in  : in     vl_logic_vector;
        pciersttxsyncstart_in: in     vl_logic_vector;
        pcieuserratedone_in: in     vl_logic_vector;
        pcsrsvdin_in    : in     vl_logic_vector;
        qpll0clk_in     : in     vl_logic_vector;
        qpll0freqlock_in: in     vl_logic_vector;
        qpll0refclk_in  : in     vl_logic_vector;
        qpll1clk_in     : in     vl_logic_vector;
        qpll1freqlock_in: in     vl_logic_vector;
        qpll1refclk_in  : in     vl_logic_vector;
        resetovrd_in    : in     vl_logic_vector;
        rx8b10ben_in    : in     vl_logic_vector;
        rxafecfoken_in  : in     vl_logic_vector;
        rxbufreset_in   : in     vl_logic_vector;
        rxcdrfreqreset_in: in     vl_logic_vector;
        rxcdrhold_in    : in     vl_logic_vector;
        rxcdrovrden_in  : in     vl_logic_vector;
        rxcdrreset_in   : in     vl_logic_vector;
        rxchbonden_in   : in     vl_logic_vector;
        rxchbondi_in    : in     vl_logic_vector;
        rxchbondlevel_in: in     vl_logic_vector;
        rxchbondmaster_in: in     vl_logic_vector;
        rxchbondslave_in: in     vl_logic_vector;
        rxckcalreset_in : in     vl_logic_vector;
        rxckcalstart_in : in     vl_logic_vector;
        rxcommadeten_in : in     vl_logic_vector;
        rxdfeagchold_in : in     vl_logic_vector;
        rxdfeagcovrden_in: in     vl_logic_vector;
        rxdfecfokfcnum_in: in     vl_logic_vector;
        rxdfecfokfen_in : in     vl_logic_vector;
        rxdfecfokfpulse_in: in     vl_logic_vector;
        rxdfecfokhold_in: in     vl_logic_vector;
        rxdfecfokovren_in: in     vl_logic_vector;
        rxdfekhhold_in  : in     vl_logic_vector;
        rxdfekhovrden_in: in     vl_logic_vector;
        rxdfelfhold_in  : in     vl_logic_vector;
        rxdfelfovrden_in: in     vl_logic_vector;
        rxdfelpmreset_in: in     vl_logic_vector;
        rxdfetap10hold_in: in     vl_logic_vector;
        rxdfetap10ovrden_in: in     vl_logic_vector;
        rxdfetap11hold_in: in     vl_logic_vector;
        rxdfetap11ovrden_in: in     vl_logic_vector;
        rxdfetap12hold_in: in     vl_logic_vector;
        rxdfetap12ovrden_in: in     vl_logic_vector;
        rxdfetap13hold_in: in     vl_logic_vector;
        rxdfetap13ovrden_in: in     vl_logic_vector;
        rxdfetap14hold_in: in     vl_logic_vector;
        rxdfetap14ovrden_in: in     vl_logic_vector;
        rxdfetap15hold_in: in     vl_logic_vector;
        rxdfetap15ovrden_in: in     vl_logic_vector;
        rxdfetap2hold_in: in     vl_logic_vector;
        rxdfetap2ovrden_in: in     vl_logic_vector;
        rxdfetap3hold_in: in     vl_logic_vector;
        rxdfetap3ovrden_in: in     vl_logic_vector;
        rxdfetap4hold_in: in     vl_logic_vector;
        rxdfetap4ovrden_in: in     vl_logic_vector;
        rxdfetap5hold_in: in     vl_logic_vector;
        rxdfetap5ovrden_in: in     vl_logic_vector;
        rxdfetap6hold_in: in     vl_logic_vector;
        rxdfetap6ovrden_in: in     vl_logic_vector;
        rxdfetap7hold_in: in     vl_logic_vector;
        rxdfetap7ovrden_in: in     vl_logic_vector;
        rxdfetap8hold_in: in     vl_logic_vector;
        rxdfetap8ovrden_in: in     vl_logic_vector;
        rxdfetap9hold_in: in     vl_logic_vector;
        rxdfetap9ovrden_in: in     vl_logic_vector;
        rxdfeuthold_in  : in     vl_logic_vector;
        rxdfeutovrden_in: in     vl_logic_vector;
        rxdfevphold_in  : in     vl_logic_vector;
        rxdfevpovrden_in: in     vl_logic_vector;
        rxdfexyden_in   : in     vl_logic_vector;
        rxdlybypass_in  : in     vl_logic_vector;
        rxdlyen_in      : in     vl_logic_vector;
        rxdlyovrden_in  : in     vl_logic_vector;
        rxdlysreset_in  : in     vl_logic_vector;
        rxelecidlemode_in: in     vl_logic_vector;
        rxeqtraining_in : in     vl_logic_vector;
        rxgearboxslip_in: in     vl_logic_vector;
        rxlatclk_in     : in     vl_logic_vector;
        rxlpmen_in      : in     vl_logic_vector;
        rxlpmgchold_in  : in     vl_logic_vector;
        rxlpmgcovrden_in: in     vl_logic_vector;
        rxlpmhfhold_in  : in     vl_logic_vector;
        rxlpmhfovrden_in: in     vl_logic_vector;
        rxlpmlfhold_in  : in     vl_logic_vector;
        rxlpmlfklovrden_in: in     vl_logic_vector;
        rxlpmoshold_in  : in     vl_logic_vector;
        rxlpmosovrden_in: in     vl_logic_vector;
        rxmcommaalignen_in: in     vl_logic_vector;
        rxmonitorsel_in : in     vl_logic_vector;
        rxoobreset_in   : in     vl_logic_vector;
        rxoscalreset_in : in     vl_logic_vector;
        rxoshold_in     : in     vl_logic_vector;
        rxosovrden_in   : in     vl_logic_vector;
        rxoutclksel_in  : in     vl_logic_vector;
        rxpcommaalignen_in: in     vl_logic_vector;
        rxpcsreset_in   : in     vl_logic_vector;
        rxpd_in         : in     vl_logic_vector;
        rxphalign_in    : in     vl_logic_vector;
        rxphalignen_in  : in     vl_logic_vector;
        rxphdlypd_in    : in     vl_logic_vector;
        rxphdlyreset_in : in     vl_logic_vector;
        rxpllclksel_in  : in     vl_logic_vector;
        rxpmareset_in   : in     vl_logic_vector;
        rxpolarity_in   : in     vl_logic_vector;
        rxprbscntreset_in: in     vl_logic_vector;
        rxprbssel_in    : in     vl_logic_vector;
        rxprogdivreset_in: in     vl_logic_vector;
        rxrate_in       : in     vl_logic_vector;
        rxratemode_in   : in     vl_logic_vector;
        rxslide_in      : in     vl_logic_vector;
        rxslipoutclk_in : in     vl_logic_vector;
        rxslippma_in    : in     vl_logic_vector;
        rxsyncallin_in  : in     vl_logic_vector;
        rxsyncin_in     : in     vl_logic_vector;
        rxsyncmode_in   : in     vl_logic_vector;
        rxsysclksel_in  : in     vl_logic_vector;
        rxtermination_in: in     vl_logic_vector;
        rxuserrdy_in    : in     vl_logic_vector;
        rxusrclk_in     : in     vl_logic_vector;
        rxusrclk2_in    : in     vl_logic_vector;
        sigvalidclk_in  : in     vl_logic_vector;
        tstin_in        : in     vl_logic_vector;
        tx8b10bbypass_in: in     vl_logic_vector;
        tx8b10ben_in    : in     vl_logic_vector;
        txcominit_in    : in     vl_logic_vector;
        txcomsas_in     : in     vl_logic_vector;
        txcomwake_in    : in     vl_logic_vector;
        txctrl0_in      : in     vl_logic_vector;
        txctrl1_in      : in     vl_logic_vector;
        txctrl2_in      : in     vl_logic_vector;
        txdata_in       : in     vl_logic_vector;
        txdataextendrsvd_in: in     vl_logic_vector;
        txdccforcestart_in: in     vl_logic_vector;
        txdccreset_in   : in     vl_logic_vector;
        txdeemph_in     : in     vl_logic_vector;
        txdetectrx_in   : in     vl_logic_vector;
        txdiffctrl_in   : in     vl_logic_vector;
        txdlybypass_in  : in     vl_logic_vector;
        txdlyen_in      : in     vl_logic_vector;
        txdlyhold_in    : in     vl_logic_vector;
        txdlyovrden_in  : in     vl_logic_vector;
        txdlysreset_in  : in     vl_logic_vector;
        txdlyupdown_in  : in     vl_logic_vector;
        txelecidle_in   : in     vl_logic_vector;
        txheader_in     : in     vl_logic_vector;
        txinhibit_in    : in     vl_logic_vector;
        txlatclk_in     : in     vl_logic_vector;
        txlfpstreset_in : in     vl_logic_vector;
        txlfpsu2lpexit_in: in     vl_logic_vector;
        txlfpsu3wake_in : in     vl_logic_vector;
        txmaincursor_in : in     vl_logic_vector;
        txmargin_in     : in     vl_logic_vector;
        txmuxdcdexhold_in: in     vl_logic_vector;
        txmuxdcdorwren_in: in     vl_logic_vector;
        txoneszeros_in  : in     vl_logic_vector;
        txoutclksel_in  : in     vl_logic_vector;
        txpcsreset_in   : in     vl_logic_vector;
        txpd_in         : in     vl_logic_vector;
        txpdelecidlemode_in: in     vl_logic_vector;
        txphalign_in    : in     vl_logic_vector;
        txphalignen_in  : in     vl_logic_vector;
        txphdlypd_in    : in     vl_logic_vector;
        txphdlyreset_in : in     vl_logic_vector;
        txphdlytstclk_in: in     vl_logic_vector;
        txphinit_in     : in     vl_logic_vector;
        txphovrden_in   : in     vl_logic_vector;
        txpippmen_in    : in     vl_logic_vector;
        txpippmovrden_in: in     vl_logic_vector;
        txpippmpd_in    : in     vl_logic_vector;
        txpippmsel_in   : in     vl_logic_vector;
        txpippmstepsize_in: in     vl_logic_vector;
        txpisopd_in     : in     vl_logic_vector;
        txpllclksel_in  : in     vl_logic_vector;
        txpmareset_in   : in     vl_logic_vector;
        txpolarity_in   : in     vl_logic_vector;
        txpostcursor_in : in     vl_logic_vector;
        txprbsforceerr_in: in     vl_logic_vector;
        txprbssel_in    : in     vl_logic_vector;
        txprecursor_in  : in     vl_logic_vector;
        txprogdivreset_in: in     vl_logic_vector;
        txrate_in       : in     vl_logic_vector;
        txratemode_in   : in     vl_logic_vector;
        txsequence_in   : in     vl_logic_vector;
        txswing_in      : in     vl_logic_vector;
        txsyncallin_in  : in     vl_logic_vector;
        txsyncin_in     : in     vl_logic_vector;
        txsyncmode_in   : in     vl_logic_vector;
        txsysclksel_in  : in     vl_logic_vector;
        txuserrdy_in    : in     vl_logic_vector;
        txusrclk_in     : in     vl_logic_vector;
        txusrclk2_in    : in     vl_logic_vector;
        bufgtce_out     : out    vl_logic_vector;
        bufgtcemask_out : out    vl_logic_vector;
        bufgtdiv_out    : out    vl_logic_vector;
        bufgtreset_out  : out    vl_logic_vector;
        bufgtrstmask_out: out    vl_logic_vector;
        cpllfbclklost_out: out    vl_logic_vector;
        cplllock_out    : out    vl_logic_vector;
        cpllrefclklost_out: out    vl_logic_vector;
        dmonitorout_out : out    vl_logic_vector;
        dmonitoroutclk_out: out    vl_logic_vector;
        drpdo_out       : out    vl_logic_vector;
        drprdy_out      : out    vl_logic_vector;
        eyescandataerror_out: out    vl_logic_vector;
        gtpowergood_out : out    vl_logic_vector;
        gtrefclkmonitor_out: out    vl_logic_vector;
        gtytxn_out      : out    vl_logic_vector;
        gtytxp_out      : out    vl_logic_vector;
        pcierategen3_out: out    vl_logic_vector;
        pcierateidle_out: out    vl_logic_vector;
        pcierateqpllpd_out: out    vl_logic_vector;
        pcierateqpllreset_out: out    vl_logic_vector;
        pciesynctxsyncdone_out: out    vl_logic_vector;
        pcieusergen3rdy_out: out    vl_logic_vector;
        pcieuserphystatusrst_out: out    vl_logic_vector;
        pcieuserratestart_out: out    vl_logic_vector;
        pcsrsvdout_out  : out    vl_logic_vector;
        phystatus_out   : out    vl_logic_vector;
        pinrsrvdas_out  : out    vl_logic_vector;
        powerpresent_out: out    vl_logic_vector;
        resetexception_out: out    vl_logic_vector;
        rxbufstatus_out : out    vl_logic_vector;
        rxbyteisaligned_out: out    vl_logic_vector;
        rxbyterealign_out: out    vl_logic_vector;
        rxcdrlock_out   : out    vl_logic_vector;
        rxcdrphdone_out : out    vl_logic_vector;
        rxchanbondseq_out: out    vl_logic_vector;
        rxchanisaligned_out: out    vl_logic_vector;
        rxchanrealign_out: out    vl_logic_vector;
        rxchbondo_out   : out    vl_logic_vector;
        rxckcaldone_out : out    vl_logic_vector;
        rxclkcorcnt_out : out    vl_logic_vector;
        rxcominitdet_out: out    vl_logic_vector;
        rxcommadet_out  : out    vl_logic_vector;
        rxcomsasdet_out : out    vl_logic_vector;
        rxcomwakedet_out: out    vl_logic_vector;
        rxctrl0_out     : out    vl_logic_vector;
        rxctrl1_out     : out    vl_logic_vector;
        rxctrl2_out     : out    vl_logic_vector;
        rxctrl3_out     : out    vl_logic_vector;
        rxdata_out      : out    vl_logic_vector;
        rxdataextendrsvd_out: out    vl_logic_vector;
        rxdatavalid_out : out    vl_logic_vector;
        rxdlysresetdone_out: out    vl_logic_vector;
        rxelecidle_out  : out    vl_logic_vector;
        rxheader_out    : out    vl_logic_vector;
        rxheadervalid_out: out    vl_logic_vector;
        rxlfpstresetdet_out: out    vl_logic_vector;
        rxlfpsu2lpexitdet_out: out    vl_logic_vector;
        rxlfpsu3wakedet_out: out    vl_logic_vector;
        rxmonitorout_out: out    vl_logic_vector;
        rxosintdone_out : out    vl_logic_vector;
        rxosintstarted_out: out    vl_logic_vector;
        rxosintstrobedone_out: out    vl_logic_vector;
        rxosintstrobestarted_out: out    vl_logic_vector;
        rxoutclk_out    : out    vl_logic_vector;
        rxoutclkfabric_out: out    vl_logic_vector;
        rxoutclkpcs_out : out    vl_logic_vector;
        rxphaligndone_out: out    vl_logic_vector;
        rxphalignerr_out: out    vl_logic_vector;
        rxpmaresetdone_out: out    vl_logic_vector;
        rxprbserr_out   : out    vl_logic_vector;
        rxprbslocked_out: out    vl_logic_vector;
        rxprgdivresetdone_out: out    vl_logic_vector;
        rxratedone_out  : out    vl_logic_vector;
        rxrecclkout_out : out    vl_logic_vector;
        rxresetdone_out : out    vl_logic_vector;
        rxsliderdy_out  : out    vl_logic_vector;
        rxslipdone_out  : out    vl_logic_vector;
        rxslipoutclkrdy_out: out    vl_logic_vector;
        rxslippmardy_out: out    vl_logic_vector;
        rxstartofseq_out: out    vl_logic_vector;
        rxstatus_out    : out    vl_logic_vector;
        rxsyncdone_out  : out    vl_logic_vector;
        rxsyncout_out   : out    vl_logic_vector;
        rxvalid_out     : out    vl_logic_vector;
        txbufstatus_out : out    vl_logic_vector;
        txcomfinish_out : out    vl_logic_vector;
        txdccdone_out   : out    vl_logic_vector;
        txdlysresetdone_out: out    vl_logic_vector;
        txoutclk_out    : out    vl_logic_vector;
        txoutclkfabric_out: out    vl_logic_vector;
        txoutclkpcs_out : out    vl_logic_vector;
        txphaligndone_out: out    vl_logic_vector;
        txphinitdone_out: out    vl_logic_vector;
        txpmaresetdone_out: out    vl_logic_vector;
        txprgdivresetdone_out: out    vl_logic_vector;
        txratedone_out  : out    vl_logic_vector;
        txresetdone_out : out    vl_logic_vector;
        txsyncdone_out  : out    vl_logic_vector;
        txsyncout_out   : out    vl_logic_vector
    );
    attribute mti_svvh_generic_type : integer;
    attribute mti_svvh_generic_type of C_CHANNEL_ENABLE : constant is 2;
    attribute mti_svvh_generic_type of C_PCIE_ENABLE : constant is 1;
    attribute mti_svvh_generic_type of C_PCIE_CORECLK_FREQ : constant is 2;
    attribute mti_svvh_generic_type of C_COMMON_SCALING_FACTOR : constant is 2;
    attribute mti_svvh_generic_type of C_CPLL_VCO_FREQUENCY : constant is 2;
    attribute mti_svvh_generic_type of C_FREERUN_FREQUENCY : constant is 2;
    attribute mti_svvh_generic_type of C_INCLUDE_CPLL_CAL : constant is 2;
    attribute mti_svvh_generic_type of C_SIM_CPLL_CAL_BYPASS : constant is 1;
    attribute mti_svvh_generic_type of C_LOCATE_RESET_CONTROLLER : constant is 2;
    attribute mti_svvh_generic_type of C_LOCATE_USER_DATA_WIDTH_SIZING : constant is 2;
    attribute mti_svvh_generic_type of C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER : constant is 2;
    attribute mti_svvh_generic_type of C_LOCATE_RX_USER_CLOCKING : constant is 2;
    attribute mti_svvh_generic_type of C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER : constant is 2;
    attribute mti_svvh_generic_type of C_LOCATE_TX_USER_CLOCKING : constant is 2;
    attribute mti_svvh_generic_type of C_RESET_CONTROLLER_INSTANCE_CTRL : constant is 2;
    attribute mti_svvh_generic_type of C_RX_BUFFBYPASS_MODE : constant is 2;
    attribute mti_svvh_generic_type of C_RX_BUFFER_BYPASS_INSTANCE_CTRL : constant is 2;
    attribute mti_svvh_generic_type of C_RX_BUFFER_MODE : constant is 2;
    attribute mti_svvh_generic_type of C_RX_DATA_DECODING : constant is 2;
    attribute mti_svvh_generic_type of C_RX_ENABLE : constant is 2;
    attribute mti_svvh_generic_type of C_RX_INT_DATA_WIDTH : constant is 2;
    attribute mti_svvh_generic_type of C_RX_LINE_RATE : constant is 2;
    attribute mti_svvh_generic_type of C_RX_MASTER_CHANNEL_IDX : constant is 2;
    attribute mti_svvh_generic_type of C_RX_OUTCLK_BUFG_GT_DIV : constant is 2;
    attribute mti_svvh_generic_type of C_RX_PLL_TYPE : constant is 2;
    attribute mti_svvh_generic_type of C_RX_USER_CLOCKING_CONTENTS : constant is 2;
    attribute mti_svvh_generic_type of C_RX_USER_CLOCKING_INSTANCE_CTRL : constant is 2;
    attribute mti_svvh_generic_type of C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 : constant is 2;
    attribute mti_svvh_generic_type of C_RX_USER_CLOCKING_SOURCE : constant is 2;
    attribute mti_svvh_generic_type of C_RX_USER_DATA_WIDTH : constant is 2;
    attribute mti_svvh_generic_type of C_TOTAL_NUM_CHANNELS : constant is 2;
    attribute mti_svvh_generic_type of C_TOTAL_NUM_COMMONS : constant is 2;
    attribute mti_svvh_generic_type of C_TX_BUFFBYPASS_MODE : constant is 2;
    attribute mti_svvh_generic_type of C_TX_BUFFER_BYPASS_INSTANCE_CTRL : constant is 2;
    attribute mti_svvh_generic_type of C_TX_BUFFER_MODE : constant is 2;
    attribute mti_svvh_generic_type of C_TX_DATA_ENCODING : constant is 2;
    attribute mti_svvh_generic_type of C_TX_ENABLE : constant is 2;
    attribute mti_svvh_generic_type of C_TX_INT_DATA_WIDTH : constant is 2;
    attribute mti_svvh_generic_type of C_TX_MASTER_CHANNEL_IDX : constant is 2;
    attribute mti_svvh_generic_type of C_TX_OUTCLK_BUFG_GT_DIV : constant is 2;
    attribute mti_svvh_generic_type of C_TX_PLL_TYPE : constant is 2;
    attribute mti_svvh_generic_type of C_TX_USER_CLOCKING_CONTENTS : constant is 2;
    attribute mti_svvh_generic_type of C_TX_USER_CLOCKING_INSTANCE_CTRL : constant is 2;
    attribute mti_svvh_generic_type of C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 : constant is 2;
    attribute mti_svvh_generic_type of C_TX_USER_CLOCKING_SOURCE : constant is 2;
    attribute mti_svvh_generic_type of C_TX_USER_DATA_WIDTH : constant is 2;
end gtwizard_ultrascale_0_gtwizard_gtye4;
